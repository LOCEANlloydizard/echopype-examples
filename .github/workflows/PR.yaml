name: CI_PR
on:
  pull_request_target:
    branches:
      - main
      
jobs:
  deploy:
    runs-on: ubuntu-18.04
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Setup Conda Cache
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('binder/conda-linux-64.lock') }}

      - name: Setup Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-version: latest
          auto-update-conda: false
          environment-file: binder/conda-linux-64.lock #or binder/environment.yml
          activate-environment: hackweek
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if '.ci_helpers/py{0}.yaml' has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('binder/environment.yml') }}
      - name: Setup miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: echopype
          environment-file: binder/environment.yml
          miniforge-variant: Mambaforge
          miniforge-version: 4.10.0-0
          use-mamba: true
          auto-activate-base: false
          use-only-tar-bz2: true
      - name: Print conda env
        shell: bash -l {0}
        run: |
          conda info
          conda list
      - name: Install Jupyterbook
        shell: bash -l {0}
        run: |
          mamba install -c conda-forge --yes jupyter-book
      - name: Build JupyterBook
        shell: bash -l {0}
        run: |
          jupyter-book build --config $PWD/jupyterbook/config.yml --toc $PWD/jupyterbook/toc.yml notebooks
      - name: Deploy Website Preview
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './notebooks/_build/html'
          production-deploy: false
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-commit-comment: false
          enable-pull-request-comment: true
          overwrites-pull-request-comment: true
          alias: deploy-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
